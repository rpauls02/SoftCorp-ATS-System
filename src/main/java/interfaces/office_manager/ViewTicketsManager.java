/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces.office_manager;

import SQL.DBConnection;
import interfaces.general.Login;
import interfaces.travel_advisor.GenerateIndividualReport;
import interfaces.travel_advisor.TicketSales;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Objects;

/**
 *
 * @author Rober
 */
public class ViewTicketsManager extends JFrame {

    /**
     * Creates new form ViewTickets
     */
    public ViewTicketsManager() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        viewTicketsPanel = new JPanel();
        buttonsPanel = new JPanel();
        homeButton = new JButton();
        viewIndSalesButton = new JButton();
        logoutButton = new JButton();
        viewTicketsPageButton = new JButton();
        sellTicketPageButton = new JButton();
        functionPanel = new JPanel();
        tableName = new JLabel();
        showDDMenu = new JComboBox<>();
        refreshTableButton = new JButton();
        tableScrollPane = new JScrollPane();
        customerTicketsTable = new JTable();
        pageTitlePanel = new JPanel();
        pageTitleLabel = new JLabel();
        logoPanel = new JPanel();
        logoLabel = new JLabel();
        tableFunctionsPanel = new JPanel();
        refundTicketButton = new JButton();
        findTicketLabel = new JTextField();
        findTicketButton = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        viewTicketsPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewTicketsPanel.setMaximumSize(new java.awt.Dimension(1200, 800));
        viewTicketsPanel.setMinimumSize(new java.awt.Dimension(1200, 800));

        buttonsPanel.setBackground(new java.awt.Color(49, 174, 209));
        buttonsPanel.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        buttonsPanel.setMaximumSize(new java.awt.Dimension(572, 104));
        buttonsPanel.setMinimumSize(new java.awt.Dimension(572, 104));

        homeButton.setBackground(new java.awt.Color(54, 198, 238));
        homeButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        viewIndSalesButton.setBackground(new java.awt.Color(54, 198, 238));
        viewIndSalesButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        viewIndSalesButton.setText("View Individual Sales Report");
        viewIndSalesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewIndSalesButtonActionPerformed(evt);
            }
        });

        logoutButton.setBackground(new java.awt.Color(255, 102, 102));
        logoutButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        logoutButton.setText("Log Out");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        viewTicketsPageButton.setBackground(new java.awt.Color(153, 153, 255));
        viewTicketsPageButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        viewTicketsPageButton.setText("View Customer Tickets");

        sellTicketPageButton.setBackground(new java.awt.Color(54, 198, 238));
        sellTicketPageButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        sellTicketPageButton.setText("Sell Ticket");
        sellTicketPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellTicketPageButtonActionPerformed(evt);
            }
        });

        GroupLayout buttonsPanelLayout = new GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
                buttonsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(buttonsPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(buttonsPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addGroup(buttonsPanelLayout.createSequentialGroup()
                                                .addComponent(homeButton, GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(viewIndSalesButton, GroupLayout.PREFERRED_SIZE, 304, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(logoutButton, GroupLayout.PREFERRED_SIZE, 122, GroupLayout.PREFERRED_SIZE))
                                        .addGroup(buttonsPanelLayout.createSequentialGroup()
                                                .addComponent(sellTicketPageButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(viewTicketsPageButton, GroupLayout.PREFERRED_SIZE, 278, GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        buttonsPanelLayout.setVerticalGroup(
                buttonsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(buttonsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(buttonsPanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addComponent(viewIndSalesButton, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(homeButton, GroupLayout.Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(logoutButton, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(buttonsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(sellTicketPageButton, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(viewTicketsPageButton, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );

        functionPanel.setBackground(new java.awt.Color(49, 174, 209));
        functionPanel.setBorder(BorderFactory.createEtchedBorder());
        functionPanel.setPreferredSize(new java.awt.Dimension(829, 72));

        tableName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tableName.setHorizontalAlignment(SwingConstants.CENTER);
        tableName.setText("Customer Tickets");

        showDDMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        showDDMenu.setModel(new DefaultComboBoxModel<>(new String[] { "Show", "10", "25", "50", "100" }));
        showDDMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDDMenuActionPerformed(evt);
            }
        });

        refreshTableButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        refreshTableButton.setText("Refresh");
        refreshTableButton.setAlignmentY(0.0F);
        refreshTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTableButtonActionPerformed(evt);
            }
        });

        GroupLayout functionPanelLayout = new GroupLayout(functionPanel);
        functionPanel.setLayout(functionPanelLayout);
        functionPanelLayout.setHorizontalGroup(
                functionPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(functionPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(showDDMenu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(382, 382, 382)
                                .addComponent(tableName, GroupLayout.PREFERRED_SIZE, 194, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 420, Short.MAX_VALUE)
                                .addComponent(refreshTableButton)
                                .addContainerGap())
        );
        functionPanelLayout.setVerticalGroup(
                functionPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(functionPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(functionPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(showDDMenu, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tableName, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(refreshTableButton))
                                .addGap(0, 5, Short.MAX_VALUE))
        );

        tableScrollPane.setBorder(BorderFactory.createEtchedBorder());

        customerTicketsTable.setBackground(new java.awt.Color(49, 174, 209));
        customerTicketsTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        customerTicketsTable.setModel(new DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null}
                },
                new String [] {
                        "Ticket ID", "Name", "Sale ID", "Status", "Blank"
                }
        ));
        customerTicketsTable.setColumnSelectionAllowed(true);
        tableScrollPane.setViewportView(customerTicketsTable);
        customerTicketsTable.getColumnModel().getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        pageTitlePanel.setBackground(new java.awt.Color(49, 174, 209));
        pageTitlePanel.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pageTitlePanel.setPreferredSize(new java.awt.Dimension(500, 83));

        pageTitleLabel.setBackground(new java.awt.Color(153, 204, 255));
        pageTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        pageTitleLabel.setHorizontalAlignment(SwingConstants.CENTER);
        pageTitleLabel.setText("View Customer Tickets");

        GroupLayout pageTitlePanelLayout = new GroupLayout(pageTitlePanel);
        pageTitlePanel.setLayout(pageTitlePanelLayout);
        pageTitlePanelLayout.setHorizontalGroup(
                pageTitlePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(pageTitleLabel, GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
        );
        pageTitlePanelLayout.setVerticalGroup(
                pageTitlePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, pageTitlePanelLayout.createSequentialGroup()
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pageTitleLabel)
                                .addGap(35, 35, 35))
        );

        logoPanel.setBorder(BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        logoPanel.setMaximumSize(new java.awt.Dimension(104, 104));
        logoPanel.setMinimumSize(new java.awt.Dimension(104, 104));

        //logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/smallLogo.png"))); // NOI18N
        ImageIcon logo = new ImageIcon("data/smallLogo.png");
        logoLabel.setIcon(logo);
        logoPanel.add(logoLabel);
        getContentPane().add(logoPanel);

        GroupLayout logoPanelLayout = new GroupLayout(logoPanel);
        logoPanel.setLayout(logoPanelLayout);
        logoPanelLayout.setHorizontalGroup(
                logoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 102, Short.MAX_VALUE)
                        .addGroup(logoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(logoPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(logoLabel)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );
        logoPanelLayout.setVerticalGroup(
                logoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 102, Short.MAX_VALUE)
                        .addGroup(logoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(logoPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(logoLabel)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );

        tableFunctionsPanel.setBackground(new java.awt.Color(49, 174, 209));
        tableFunctionsPanel.setBorder(BorderFactory.createEtchedBorder());
        tableFunctionsPanel.setForeground(new java.awt.Color(255, 255, 255));

        refundTicketButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        refundTicketButton.setText("Refund");
        refundTicketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refundTicketButtonActionPerformed(evt);
            }
        });

        findTicketLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        findTicketButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        findTicketButton.setText("Find");
        findTicketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findTicketButtonActionPerformed(evt);
            }
        });

        GroupLayout tableFunctionsPanelLayout = new GroupLayout(tableFunctionsPanel);
        tableFunctionsPanel.setLayout(tableFunctionsPanelLayout);
        tableFunctionsPanelLayout.setHorizontalGroup(
                tableFunctionsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(tableFunctionsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(findTicketLabel, GroupLayout.PREFERRED_SIZE, 178, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(findTicketButton)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(refundTicketButton)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tableFunctionsPanelLayout.setVerticalGroup(
                tableFunctionsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, tableFunctionsPanelLayout.createSequentialGroup()
                                .addContainerGap(8, Short.MAX_VALUE)
                                .addGroup(tableFunctionsPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(refundTicketButton)
                                        .addComponent(findTicketLabel)
                                        .addComponent(findTicketButton))
                                .addContainerGap())
        );

        GroupLayout viewTicketsPanelLayout = new GroupLayout(viewTicketsPanel);
        viewTicketsPanel.setLayout(viewTicketsPanelLayout);
        viewTicketsPanelLayout.setHorizontalGroup(
                viewTicketsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(viewTicketsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(viewTicketsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(viewTicketsPanelLayout.createSequentialGroup()
                                                .addComponent(logoPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pageTitlePanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buttonsPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(tableScrollPane, GroupLayout.Alignment.TRAILING)
                                        .addComponent(functionPanel, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 1188, Short.MAX_VALUE)
                                        .addComponent(tableFunctionsPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        viewTicketsPanelLayout.setVerticalGroup(
                viewTicketsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(viewTicketsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(viewTicketsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                        .addComponent(buttonsPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pageTitlePanel, GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                        .addComponent(logoPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(functionPanel, GroupLayout.PREFERRED_SIZE, 47, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tableScrollPane, GroupLayout.PREFERRED_SIZE, 569, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tableFunctionsPanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(viewTicketsPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(viewTicketsPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_homeButtonActionPerformed

    private void viewIndSalesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewIndSalesButtonActionPerformed
        dispose();
        new GenerateIndividualReport().setVisible(true);
    }//GEN-LAST:event_viewIndSalesButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void sellTicketPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellTicketPageButtonActionPerformed
        dispose();
        new TicketSales().setVisible(true);
    }//GEN-LAST:event_sellTicketPageButtonActionPerformed

    private void showDDMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDDMenuActionPerformed
        DefaultTableModel model = (DefaultTableModel) customerTicketsTable.getModel();
        int rowCount = model.getRowCount();
        int maxRows;
        switch ((String) Objects.requireNonNull(showDDMenu.getSelectedItem())) {
            case "10" -> {
                maxRows = 10;
                if (rowCount > maxRows) {
                    model.setRowCount(maxRows);
                }
            }
            case "25" -> {
                maxRows = 25;
                if (rowCount > maxRows) {
                    model.setRowCount(maxRows);
                }
            }
            case "50" -> {
                maxRows = 50;
                if (rowCount > maxRows) {
                    model.setRowCount(maxRows);
                }
            }
            case "100" -> {
                maxRows = 100;
                if (rowCount > maxRows) {
                    model.setRowCount(maxRows);
                }
            }
        }
    }//GEN-LAST:event_showDDMenuActionPerformed

    private void refreshTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTableButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel)customerTicketsTable.getModel();
        Connection conn = null;
        PreparedStatement pstm = null;
        ResultSet rs = null;
        try {
            conn = DBConnection.getConnection();
            String query = "SELECT * FROM in2018g12.ticket";
            pstm = conn.prepareStatement(query);
            rs = pstm.executeQuery();
            if (!rs.next()){
                JOptionPane.showMessageDialog(this, "Could not refresh table data. Try again or contact system administrator");
            } else {
                model.setRowCount(0);
                do {
                    Object[] row = new Object[5];
                    row[0] = rs.getString("id");
                    row[1] = rs.getString("customerUsername");
                    row[2] = rs.getString("saleID");
                    row[3] = rs.getString("status");
                    row[4] = rs.getString("blank");
                    model.addRow(row);
                } while (rs.next());
            }
        } catch (SQLException sqle) {
            if (conn != null) { try { conn.rollback(); } catch (SQLException e) { throw new RuntimeException(sqle); }}
        } finally {
            try { if (rs != null) rs.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (pstm != null) pstm.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (conn != null) conn.close(); } catch (Exception e) { throw new RuntimeException(e); }
        }
    }//GEN-LAST:event_refreshTableButtonActionPerformed

    private void findTicketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findTicketButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel)customerTicketsTable.getModel();
        Connection conn = null;
        PreparedStatement pstm = null;
        ResultSet rs = null;
        try {
            conn = DBConnection.getConnection();
            String query = "SELECT * FROM ticket WHERE customerUsername IN (SELECT username FROM customer WHERE surname = '" + findTicketLabel.getText() + "')";
            pstm = conn.prepareStatement(query);
            rs = pstm.executeQuery(query);
            if (!rs.next()){
                JOptionPane.showMessageDialog(this, "Customer not found. " +
                        "Review entered details or contact system administrator");
            } else {
                model.setRowCount(0);
                do {
                    Object[] row = new Object[4];
                    row[0] = rs.getString("blankNumber");
                    row[1] = rs.getString("customerUsername");
                    row[2] = rs.getString("saleID");
                    row[3] = rs.getString("status");
                    model.addRow(row);
                } while (rs.next());
            }
        } catch (SQLException sqle) {
            if (conn != null) { try { conn.rollback(); } catch (SQLException e) { throw new RuntimeException(sqle); }}
        } finally {
            try { if (conn != null) conn.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (pstm != null) pstm.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (rs != null) rs.close(); } catch (Exception e) { throw new RuntimeException(e); }
        }
    }//GEN-LAST:event_findTicketButtonActionPerformed

    private void refundTicketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refundTicketButtonActionPerformed
        Connection conn = null;
        PreparedStatement pstm = null;
        ResultSet rs = null;
        try {
            FileWriter writer = new FileWriter("refunds.txt", true);
            writer.write(customerTicketsTable.getValueAt(0, 0) + " returned and full refund given. \n");
            writer.close();
        } catch (IOException e){
            JOptionPane.showMessageDialog(this, "Could not record refund. Review selection or contact system administrator", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try { if (conn != null) conn.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (pstm != null) pstm.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (rs != null) rs.close(); } catch (Exception e) { throw new RuntimeException(e); }
        }

    }//GEN-LAST:event_refundTicketButtonActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewTicketsManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewTicketsManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewTicketsManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewTicketsManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewTicketsManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private JTable customerTicketsTable;
    private JPanel buttonsPanel;
    private JButton findTicketButton;
    private JTextField findTicketLabel;
    private JPanel functionPanel;
    private JButton homeButton;
    private JLabel logoLabel;
    private JPanel logoPanel;
    private JButton logoutButton;
    private JLabel pageTitleLabel;
    private JPanel pageTitlePanel;
    private JButton refreshTableButton;
    private JButton refundTicketButton;
    private JButton sellTicketPageButton;
    private JComboBox<String> showDDMenu;
    private JPanel tableFunctionsPanel;
    private JLabel tableName;
    private JScrollPane tableScrollPane;
    private JButton viewIndSalesButton;
    private JButton viewTicketsPageButton;
    private JPanel viewTicketsPanel;
    // End of variables declaration
}
