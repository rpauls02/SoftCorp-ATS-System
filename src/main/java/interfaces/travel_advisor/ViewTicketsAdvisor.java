/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces.travel_advisor;

import SQL.DBConnection;
import interfaces.general.Login;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Objects;

/**
 *
 * @author Rober
 */
public class ViewTicketsAdvisor extends javax.swing.JFrame {

    /**
     * Creates new form ViewTickets
     */
    public ViewTicketsAdvisor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        viewTicketsPanel = new javax.swing.JPanel();
        buttonsPanel = new javax.swing.JPanel();
        homeButton = new javax.swing.JButton();
        viewIndSalesButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        viewTicketsPageButton = new javax.swing.JButton();
        sellTicketPageButton = new javax.swing.JButton();
        functionPanel = new javax.swing.JPanel();
        tableName = new javax.swing.JLabel();
        showDDMenu = new javax.swing.JComboBox<>();
        refreshTableButton = new javax.swing.JButton();
        tableScrollPane = new javax.swing.JScrollPane();
        customerTicketsTable = new javax.swing.JTable();
        pageTitlePanel = new javax.swing.JPanel();
        pageTitleLabel = new javax.swing.JLabel();
        logoPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        tableFunctionsPanel = new javax.swing.JPanel();
        refundTicketButton = new javax.swing.JButton();
        findTicketLabel = new javax.swing.JTextField();
        findTicketButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        viewTicketsPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewTicketsPanel.setMaximumSize(new java.awt.Dimension(1200, 800));
        viewTicketsPanel.setMinimumSize(new java.awt.Dimension(1200, 800));

        buttonsPanel.setBackground(new java.awt.Color(49, 174, 209));
        buttonsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        buttonsPanel.setMaximumSize(new java.awt.Dimension(572, 104));
        buttonsPanel.setMinimumSize(new java.awt.Dimension(572, 104));

        homeButton.setBackground(new java.awt.Color(54, 198, 238));
        homeButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        homeButton.setText("Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        viewIndSalesButton.setBackground(new java.awt.Color(54, 198, 238));
        viewIndSalesButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        viewIndSalesButton.setText("View Individual Sales Report");
        viewIndSalesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewIndSalesButtonActionPerformed(evt);
            }
        });

        logoutButton.setBackground(new java.awt.Color(255, 102, 102));
        logoutButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        logoutButton.setText("Log Out");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        viewTicketsPageButton.setBackground(new java.awt.Color(153, 153, 255));
        viewTicketsPageButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        viewTicketsPageButton.setText("View Customer Tickets");

        sellTicketPageButton.setBackground(new java.awt.Color(54, 198, 238));
        sellTicketPageButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        sellTicketPageButton.setText("Sell Ticket");
        sellTicketPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellTicketPageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonsPanelLayout = new javax.swing.GroupLayout(buttonsPanel);
        buttonsPanel.setLayout(buttonsPanelLayout);
        buttonsPanelLayout.setHorizontalGroup(
                buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(buttonsPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(buttonsPanelLayout.createSequentialGroup()
                                                .addComponent(homeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(viewIndSalesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(buttonsPanelLayout.createSequentialGroup()
                                                .addComponent(sellTicketPageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(viewTicketsPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        buttonsPanelLayout.setVerticalGroup(
                buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(buttonsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(viewIndSalesButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(homeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(buttonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(sellTicketPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(viewTicketsPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );

        functionPanel.setBackground(new java.awt.Color(49, 174, 209));
        functionPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        functionPanel.setPreferredSize(new java.awt.Dimension(829, 72));

        tableName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tableName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tableName.setText("Customer Tickets");

        showDDMenu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        showDDMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Show", "10", "25", "50", "100" }));
        showDDMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDDMenuActionPerformed(evt);
            }
        });

        refreshTableButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        refreshTableButton.setText("Refresh");
        refreshTableButton.setAlignmentY(0.0F);
        refreshTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTableButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout functionPanelLayout = new javax.swing.GroupLayout(functionPanel);
        functionPanel.setLayout(functionPanelLayout);
        functionPanelLayout.setHorizontalGroup(
                functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(functionPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(showDDMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(382, 382, 382)
                                .addComponent(tableName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 420, Short.MAX_VALUE)
                                .addComponent(refreshTableButton)
                                .addContainerGap())
        );
        functionPanelLayout.setVerticalGroup(
                functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(functionPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(showDDMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(tableName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(refreshTableButton))
                                .addGap(0, 5, Short.MAX_VALUE))
        );

        tableScrollPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        customerTicketsTable.setBackground(new java.awt.Color(49, 174, 209));
        customerTicketsTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        customerTicketsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null}
                },
                new String [] {
                        "Ticket ID", "Name", "Sale ID", "Status", "Blank"
                }
        ));
        customerTicketsTable.setColumnSelectionAllowed(true);
        tableScrollPane.setViewportView(customerTicketsTable);
        customerTicketsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        pageTitlePanel.setBackground(new java.awt.Color(49, 174, 209));
        pageTitlePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pageTitlePanel.setPreferredSize(new java.awt.Dimension(500, 83));

        pageTitleLabel.setBackground(new java.awt.Color(153, 204, 255));
        pageTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        pageTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pageTitleLabel.setText("View Customer Tickets");

        javax.swing.GroupLayout pageTitlePanelLayout = new javax.swing.GroupLayout(pageTitlePanel);
        pageTitlePanel.setLayout(pageTitlePanelLayout);
        pageTitlePanelLayout.setHorizontalGroup(
                pageTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pageTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
        );
        pageTitlePanelLayout.setVerticalGroup(
                pageTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pageTitlePanelLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pageTitleLabel)
                                .addGap(35, 35, 35))
        );

        logoPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        logoPanel.setMaximumSize(new java.awt.Dimension(104, 104));
        logoPanel.setMinimumSize(new java.awt.Dimension(104, 104));

        //logoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data/smallLogo.png"))); // NOI18N
        ImageIcon logo = new ImageIcon("data/smallLogo.png");
        logoLabel.setIcon(logo);
        logoPanel.add(logoLabel);
        getContentPane().add(logoPanel);

        javax.swing.GroupLayout logoPanelLayout = new javax.swing.GroupLayout(logoPanel);
        logoPanel.setLayout(logoPanelLayout);
        logoPanelLayout.setHorizontalGroup(
                logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 102, Short.MAX_VALUE)
                        .addGroup(logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(logoPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(logoLabel)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );
        logoPanelLayout.setVerticalGroup(
                logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 102, Short.MAX_VALUE)
                        .addGroup(logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(logoPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(logoLabel)
                                        .addGap(0, 0, Short.MAX_VALUE)))
        );

        tableFunctionsPanel.setBackground(new java.awt.Color(49, 174, 209));
        tableFunctionsPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tableFunctionsPanel.setForeground(new java.awt.Color(255, 255, 255));

        refundTicketButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        refundTicketButton.setText("Refund");
        refundTicketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refundTicketButtonActionPerformed(evt);
            }
        });

        findTicketLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        findTicketButton.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        findTicketButton.setText("Find");
        findTicketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findTicketButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tableFunctionsPanelLayout = new javax.swing.GroupLayout(tableFunctionsPanel);
        tableFunctionsPanel.setLayout(tableFunctionsPanelLayout);
        tableFunctionsPanelLayout.setHorizontalGroup(
                tableFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tableFunctionsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(findTicketLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(findTicketButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(refundTicketButton)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tableFunctionsPanelLayout.setVerticalGroup(
                tableFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tableFunctionsPanelLayout.createSequentialGroup()
                                .addContainerGap(8, Short.MAX_VALUE)
                                .addGroup(tableFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(refundTicketButton)
                                        .addComponent(findTicketLabel)
                                        .addComponent(findTicketButton))
                                .addContainerGap())
        );

        javax.swing.GroupLayout viewTicketsPanelLayout = new javax.swing.GroupLayout(viewTicketsPanel);
        viewTicketsPanel.setLayout(viewTicketsPanelLayout);
        viewTicketsPanelLayout.setHorizontalGroup(
                viewTicketsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewTicketsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(viewTicketsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(viewTicketsPanelLayout.createSequentialGroup()
                                                .addComponent(logoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pageTitlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(tableScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(functionPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1188, Short.MAX_VALUE)
                                        .addComponent(tableFunctionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        viewTicketsPanelLayout.setVerticalGroup(
                viewTicketsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(viewTicketsPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(viewTicketsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(buttonsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(pageTitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                        .addComponent(logoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(functionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tableFunctionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(viewTicketsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(viewTicketsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        dispose();
        new TravelAdvisorHub().setVisible(true);
    }//GEN-LAST:event_homeButtonActionPerformed

    private void viewIndSalesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewIndSalesButtonActionPerformed
        dispose();
        new GenerateIndividualReport().setVisible(true);
    }//GEN-LAST:event_viewIndSalesButtonActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void sellTicketPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellTicketPageButtonActionPerformed
        dispose();
        new TicketSales().setVisible(true);
    }//GEN-LAST:event_sellTicketPageButtonActionPerformed

         /*
        * User clicking on a drop-down menu
        1. The method gets the table that shows the customer tickets from the program.
        2. It counts how many rows are in the table.
        3. Depending on which item the user selected from the drop-down menu, the method sets a maximum number of rows that can be shown in the table.
        4. If the number of rows in the table is greater than the maximum number of rows allowed, the method removes the extra rows from the table.
        5. The method updates the table to show the correct number of rows based on the user's selection from the drop-down menu.
         *
        * */

    private void showDDMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDDMenuActionPerformed
        DefaultTableModel model = (DefaultTableModel) customerTicketsTable.getModel();
        int rowCount = model.getRowCount();
        int maxRows;
        switch ((String) Objects.requireNonNull(showDDMenu.getSelectedItem())) {
            case "10" -> {
                maxRows = 10;
                if (rowCount > maxRows) {
                    model.setRowCount(maxRows);
                }
            }
            case "25" -> {
                maxRows = 25;
                if (rowCount > maxRows) {
                    model.setRowCount(maxRows);
                }
            }
            case "50" -> {
                maxRows = 50;
                if (rowCount > maxRows) {
                    model.setRowCount(maxRows);
                }
            }
            case "100" -> {
                maxRows = 100;
                if (rowCount > maxRows) {
                    model.setRowCount(maxRows);
                }
            }
        }
    }//GEN-LAST:event_showDDMenuActionPerformed

        /*
        * Refreshing the table
        1. Gets a table model that represents the data in the customerTicketsTable.
        2. Tries to connect to a database using a specific driver.
        3. Executes a SQL query to retrieve all the data from the ticket table.
        4. Checks if the query returned any data. If not, it shows an error message.
        5. If the query returned data, it clears the table model and then adds each row of data to the table model.
        6. If there is any SQL exception during this process, it will try to rollback the request.
        7. Finally, it closes all the open resources like the ResultSet, PreparedStatement, and Connection objects to avoid memory leaks.
        *
        * */

    private void refreshTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTableButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel)customerTicketsTable.getModel();
        Connection conn = null;
        PreparedStatement pstm = null;
        ResultSet rs = null;
        try {
            conn = DBConnection.getConnection();
            String query = "SELECT * FROM in2018g12.ticket";
            pstm = conn.prepareStatement(query);
            rs = pstm.executeQuery();
            if (!rs.next()){
                JOptionPane.showMessageDialog(this, "Could not refresh table data. Try again or contact system administrator");
            } else {
                model.setRowCount(0);
                do {
                    Object[] row = new Object[5];
                    row[0] = rs.getString("id");
                    row[1] = rs.getString("customerUsername");
                    row[2] = rs.getString("saleID");
                    row[3] = rs.getString("status");
                    row[4] = rs.getString("blank");
                    model.addRow(row);
                } while (rs.next());
            }
        } catch (SQLException sqle) {
            if (conn != null) { try { conn.rollback(); } catch (SQLException e) { throw new RuntimeException(sqle); }}
        } finally {
            try { if (rs != null) rs.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (pstm != null) pstm.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (conn != null) conn.close(); } catch (Exception e) { throw new RuntimeException(e); }
        }
    }//GEN-LAST:event_refreshTableButtonActionPerformed

        /*
        * Finding the Ticket Button Action
        1. Establishes a connection to the database and creates a prepared statement to execute a SQL query.
        2. Executes a SQL query to find all tickets associated with a customer whose surname matches the text in a label named "findTicketLabel".
        3. If the customer is not found, it displays an error message using a dialog box.
        4. If the customer is found, it clears the contents of the "model" variable and fills it with the details of all the tickets associated with the customer.
        5. Catches and handles any exceptions that may occur during the process.
        6. Closes the database connection, statement, and result set to free up system resources.
        *
        * */

    private void findTicketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findTicketButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel)customerTicketsTable.getModel();
        Connection conn = null;
        PreparedStatement pstm = null;
        ResultSet rs = null;
        try {
            conn = DBConnection.getConnection();
            String query = "SELECT * FROM ticket WHERE customerUsername IN (SELECT username FROM customer WHERE surname = '" + findTicketLabel.getText() + "')";
            pstm = conn.prepareStatement(query);
            rs = pstm.executeQuery(query);
            if (!rs.next()){
                JOptionPane.showMessageDialog(this, "Customer not found. " +
                        "Review entered details or contact system administrator");
            } else {
                model.setRowCount(0);
                do {
                    Object[] row = new Object[4];
                    row[0] = rs.getString("blankNumber");
                    row[1] = rs.getString("customerUsername");
                    row[2] = rs.getString("saleID");
                    row[3] = rs.getString("status");
                    model.addRow(row);
                } while (rs.next());
            }
        } catch (SQLException sqle) {
            if (conn != null) { try { conn.rollback(); } catch (SQLException e) { throw new RuntimeException(sqle); }}
        } finally {
            try { if (conn != null) conn.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (pstm != null) pstm.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (rs != null) rs.close(); } catch (Exception e) { throw new RuntimeException(e); }
        }
    }//GEN-LAST:event_findTicketButtonActionPerformed

        /*
        * Creating a refund of customers ticket and storing it in a txt file
        1. When the "refund ticket" button is clicked, it connects to a database and prepares a SQL query to update the status of a ticket to "Refunded".
        2. It then executes the query and records the refund in a file named "refunds.txt".
        3. If an error occurs during this process, it displays an error message to the user.
        4. Finally, it closes the database connection, statement, and result set.
        *
        * */

    private void refundTicketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refundTicketButtonActionPerformed
        Connection conn = null;
        PreparedStatement pstm = null;
        ResultSet rs = null;
        try {
            conn = DBConnection.getConnection();
            String query = "UPDATE in2018g12.ticket SET status = ? " +
                           "WHERE customerUsername IN (SELECT username FROM customer WHERE surname = '" + findTicketLabel.getText() + "')";
            pstm = conn.prepareStatement(query);
            pstm.setString(1, "Refunded");
            rs = pstm.executeQuery(query);
            FileWriter writer = new FileWriter("refunds.txt", true);
            writer.write(customerTicketsTable.getValueAt(0, 0) + " returned and full refund given. \n");
            writer.close();
        } catch (IOException | SQLException e){
            JOptionPane.showMessageDialog(this, "Could not record refund. Review selection or contact system administrator", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try { if (conn != null) conn.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (pstm != null) pstm.close(); } catch (Exception e) { throw new RuntimeException(e); }
            try { if (rs != null) rs.close(); } catch (Exception e) { throw new RuntimeException(e); }
        }
    }//GEN-LAST:event_refundTicketButtonActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewTicketsAdvisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewTicketsAdvisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewTicketsAdvisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewTicketsAdvisor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewTicketsAdvisor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JTable customerTicketsTable;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton findTicketButton;
    private javax.swing.JTextField findTicketLabel;
    private javax.swing.JPanel functionPanel;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel pageTitleLabel;
    private javax.swing.JPanel pageTitlePanel;
    private javax.swing.JButton refreshTableButton;
    private javax.swing.JButton refundTicketButton;
    private javax.swing.JButton sellTicketPageButton;
    private javax.swing.JComboBox<String> showDDMenu;
    private javax.swing.JPanel tableFunctionsPanel;
    private javax.swing.JLabel tableName;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JButton viewIndSalesButton;
    private javax.swing.JButton viewTicketsPageButton;
    private javax.swing.JPanel viewTicketsPanel;
    // End of variables declaration
}
